function [centers radius] = GetRegionsInfo(Sp,L,C)
% Project: Dense Visual Odometry
% Function: GetRegionsInfo
%
% Description:
%   Cluster the suspected points into different group.
%
% Example:
%   [centers radius] = ClusterPoints(Sp,threshold)
%   
%   centers: Moving regions' centers represented by a group of x,y
%           coordinate
%   radius: Radius of moving regions. Each moving region is approximately
%           represented by a circle generated by its center and
%           corresponding redius
%   SP: The suspected points (above-mentioned white points)
%   r: The residual of current image pair(i.e.r2).
%   dr: The residual of current residual r2 and the previous residual (dr = abs(r2 -r1))
%   thresh1,thresh2: Thresholds determine if a pixel belongs to the
%                    boundary of a moving region. At this time, the value
%                    of the thresholds are set by experience and may vary
%                    from different dataset.
% NOTE: 
%
% Author: Ethan Zhou
% Email: cavatina@yeah.net
% Website: https://github.com/Ethan-Zhou/Dense-VO
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% log:
% 2014-05-27: Complete
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[CNum CDim] = size(C);
[SpNum SpDim] = size(Sp)
centers = C;
radius = zeros(CNum,1);
for i = 1:CNum
    CX = C(i,1);
    CY = C(i,2);
    r_max = 0;
    for j = 1:SpNum
        if L(j) == i
            r = (Sp(j,1) - CX)^2 + (Sp(j,2)-CY)^2;
            if r > r_max
                r_max = r;
            end
        end
    end
    radius(i) = floor(sqrt(r_max));
end
    

